/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import java.util.Set;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        Graph<Integer> graphObject = new Graph<>();
        Node<Integer> Node1 = new Node<>(1);
        Node<Integer> Node2 = new Node<>(2);
        Node<Integer> Node3 = new Node<>(3);
        graphObject.addNode(Node1);
        graphObject.addNode(Node2);
        graphObject.addNode(Node3);
        graphObject.addEdge(Node1, Node2);
        graphObject.addEdge(Node1, Node3);
        graphObject.addEdge(Node2, Node3);
        graphObject.addEdge(Node3, Node1);

        System.out.println("Graph size is " + graphObject.size());

        Set<Node<Integer>> nodes = graphObject.getNodes();
        for (Node<Integer> key : nodes) {
            System.out.println("Node " + key.getVertex());
        }

        System.out.println();

        for (int i = 0; i < graphObject.getNeighbors(Node1).size(); i++) {
            System.out.println("Node " + Node1.getVertex() + " Has " + graphObject.getNeighbors(Node1).get(i).getVertex() + " As a Neighbor");
        }

        System.out.println();

        for (int i = 0; i < graphObject.getNeighbors(Node2).size(); i++) {
            System.out.println("Node " + Node2.getVertex() + " Has " + graphObject.getNeighbors(Node2).get(i).getVertex() + " As a Neighbor");
        }

        System.out.println();

        for (int i = 0; i < graphObject.getNeighbors(Node3).size(); i++) {
            System.out.println("Node " + Node3.getVertex() + " Has " + graphObject.getNeighbors(Node3).get(i).getVertex() + " As a Neighbor");
        }
    }


}
